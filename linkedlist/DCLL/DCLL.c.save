#include<stdio.h>
#include<stdlib.h>
#include<malloc.h>
struct node{
	struct node* prev;
	int data;
	struct node* next;
}*head=NULL;
void add(int);
void traverse();
int main(int argc,char* argv[]){
	int num;
	printf("Enter number of nodes \n");
	scanf("%d",&num);
	add(num);
	traverse();
}
void add(int num){
	int count=0;
	while(count<num){
		printf("Enter data for node\n");
		int data;
		scanf("%d",&data);
		struct node* temp=(struct node*)malloc(sizeof(struct node));
		temp->data=data;
		temp->prev=temp;
		temp->next=temp;
		if(count==0){
			head=temp;
		}else{
		struct node* p=head;
		while(p->next!=head){
			p=p->next;
		}
		temp->prev=p;
		p->next=temp;
		temp->next=head;
		head->prev=temp;
		}
		count++;
	}
}
void traverse(){
	struct node* p=head;
	struct node* last=NULL;
	while(p->next!=head){
	      printf("-%d-\n",p->data);
	      p=p->next;
	}
	last=p;
	printf("-%d-\t\n",p->data);
	while(p->prev!=last){
	      printf("-%d-\n",p->data);
	      p=p->prev;
	}
}
void insert(int pos,int data){
	struct node* temp=(struct node*)malloc(sizeof(struct node));
	temp->data=data;
	temp->prev=temp;
	temp->next=temp;
	if(pos==1){
		if(head==NULL)
			head=temp;
		else{
			struct node* p;
			p=head->prev;
			p->next=temp;
			temp->prev=p;
			head->prev=temp;
			temp->next=head;
			head->next=temp;
			temp->prev=head->prev;
		}
	}
}
